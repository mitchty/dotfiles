#+TITLE: Emacs org-mode configuration setup

* Startup
** emacs server

Start up the emacs server if it isn't running.

#+name: emacs-server
#+BEGIN_SRC emacs-lisp
(load "server")
(unless (server-running-p) (server-start))
#+END_SRC
** OS specific
Make it easier to determine what os we're running on.
#+name: os-specific
#+BEGIN_SRC emacs-lisp
(defvar mswindows-p (string-match "windows" (symbol-name system-type))
  "Am I running under windows?")
(defvar osx-p (string-match "darwin" (symbol-name system-type))
  "Am I running under osx?")
(defvar linux-p (string-match "gnu/linux" (symbol-name system-type))
  "Am I running under linux?")
#+END_SRC
*** Mac OS X Gui emacs PATH setup

This is here because if gui emacs gets started say from Finder, one can
end up with missing certain things that aren't in the default PATH.

The strategy is fire off a $SHELL and have it echo the PATH it has and
then parse that to setup emacs exec-path.

For now we restrict this only to OSX. It may be more generally useful
however.
#+name: osx-gui-hack
#+BEGIN_SRC emacs-lisp
(defun set-exec-path-from-shell-PATH ()
  (let ((path-from-shell
   (shell-command-to-string "$SHELL -i -c 'echo $PATH'")))
    (setenv "PATH" path-from-shell)
    (setq exec-path (split-string path-from-shell path-separator))))

(if osx-p (set-exec-path-from-shell-PATH))
#+END_SRC
** Disable pointless startup stuff
#+name: startup
#+BEGIN_SRC emacs-lisp
(setq inhibit-startup-screen t)
(setq inhibit-startup-screen t)
(setq inhibit-startup-echo-area-message t)
#+END_SRC
* Global key bindings
#+name: global-keys
#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "C-,") 'kill-whole-line)
#+END_SRC
* Temporary files
#+name: tempfiles
#+BEGIN_SRC emacs-lisp
(setq backup-directory-alist
      `((".*" . ,temporary-file-directory)))
(setq auto-save-file-name-transforms
      `((".*" ,temporary-file-directory t)))
#+END_SRC
* Auto revert

Update files in open buffers as they're changed on disk.
#+name: autorevert
#+BEGIN_SRC emacs-lisp
(setq global-auto-revert-mode t)
#+END_SRC

* Final configuration file

This is the autogenerated emacs lisp file generated from the fragments
defined previously.

#+BEGIN_SRC emacs-lisp :tangle yes :noweb no-export :exports code
;;
;; THIS FILE IS AUTOMATICALLY GENERATED DO NOT EDIT IT BY HAND
;;

<<startup>>
<<look-and-feel>>
<<autocomplete>>
<<packages>>
<<programming>>
<<other>>
<<auto-load>>
<<custom-settings>>
#+END_SRC
